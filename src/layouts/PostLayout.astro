---
import dayjs from 'dayjs'
import relativeTime from 'dayjs/plugin/relativeTime'
import BaseLayout from './BaseLayout.astro'
import TagCard from '@/components/TagCard.astro'
import Giscus from '@/components/Giscus.astro'
import { Image } from '@astrojs/image/components'
import { cx } from '@/lib/utils'
import type { MarkdownLayoutProps } from 'astro'
import type { Frontmatter, SiteMetadata } from '@/types'
import avatar from '@/assets/81856932_p0_400x400.jpg'
import '@/styles/syntaxHighlight.css'

interface Props extends MarkdownLayoutProps<Frontmatter> {}

const {
  title,
  description,
  publishedAt,
  updatedAt,
  tags,
  comments = true,
  minutesRead,
} = Astro.props.frontmatter

const metadata: SiteMetadata = {
  title: `${title} â€“ NekoChan`,
  description,
}

dayjs.extend(relativeTime)
---

<BaseLayout {...metadata}>
  <h1 class='mb-6 text-3xl font-bold tracking-tight md:text-5xl'>{title}</h1>
  <div class='flex flex-col items-start justify-between w-full mb-4 md:flex-row md:items-center'>
    <div class='flex items-center'>
      <Image
        src={avatar}
        alt='NekoChan'
        class='hidden sm:inline-block w-6 h-6 mr-1.5 rounded-full'
        draggable={false}
        loading='eager'
        format='webp'
      />
      <p class='text-sm text-gray-700 dark:text-gray-300'>
        <a
          href='https://github.com/NekoChanTaiwan'
          target='_blank'
          rel='noopener noreferrer'
          class='text-gray-600 dark:text-gray-200'
        >
          NekoChan
        </a>
        <span>posts on</span>
        <time
          class='text-gray-600 dark:text-gray-200'
          datetime={dayjs(publishedAt).toISOString()}
          title={dayjs(publishedAt).fromNow()}
        >
          {dayjs(publishedAt).format('MMMM DD YYYY')}
        </time>
        {
          updatedAt && (
            <>
              <span>,&nbsp;</span>
              <br class='sm:hidden' />
              <span>modified on</span>
              <time
                class='text-gray-600 dark:text-gray-200'
                datetime={dayjs(updatedAt).toISOString()}
                title={dayjs(updatedAt).fromNow()}
              >
                {dayjs(updatedAt).format('MMMM DD YYYY')}
              </time>
            </>
          )
        }
      </p>
    </div>
    <p class='text-sm text-gray-600 dark:text-gray-300 min-w-32 md:mt-0'>{minutesRead}</p>
  </div>
  <article
    class={cx(
      'prose lg:prose-xl dark:prose-invert max-w-none w-full mx-auto mb-10',
      'prose-hr:transition-colors prose-hr:duration-300',
      'prose-pre:border-2 prose-pre:border-gray-200 dark:prose-pre:border-gray-700',
      'prose-code:text-pink-500'
    )}
  >
    <slot />
    <hr />
  </article>
  <ol class='flex flex-wrap gap-2'>
    {
      tags.map((tag) => (
        <li>
          <TagCard tag={tag} />
        </li>
      ))
    }
  </ol>
  {comments && <Giscus />}
</BaseLayout>
