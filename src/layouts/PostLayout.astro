---
import dayjs from 'dayjs'
import relativeTime from 'dayjs/plugin/relativeTime'
import BaseLayout from './BaseLayout.astro'
import type { MarkdownLayoutProps } from 'astro'
import type { Frontmatter } from '@/types'

interface Props extends MarkdownLayoutProps<Frontmatter> {}

const { title, description, author, publishedAt, updatedAt, minutesRead } = Astro.props.frontmatter

dayjs.extend(relativeTime)
---

<BaseLayout title={`${title} â€“ NekoChan`} description={description}>
  <h1 class='mb-6 text-3xl font-bold tracking-tight md:text-5xl'>{title}</h1>
  <div class='flex flex-col items-start justify-between w-full mb-4 md:flex-row md:items-center'>
    <div class='flex items-center'>
      <p class='text-sm text-gray-700 dark:text-gray-300'>
        <span>{author} posts on</span>
        <time
          class='text-gray-600 dark:text-gray-200'
          datetime={dayjs(publishedAt).toISOString()}
          title={dayjs(publishedAt).fromNow()}
        >
          {dayjs(publishedAt).format('MMMM DD YYYY')}
        </time>
        {
          updatedAt && (
            <>
              <span>,</span>
              <br class='sm:hidden' />
              <span>&nbsp;modified on&nbsp;</span>
              <time
                class='text-gray-600 dark:text-gray-200'
                datetime={dayjs(updatedAt).toISOString()}
                title={dayjs(updatedAt).fromNow()}
              >
                {dayjs(updatedAt).format('MMMM DD YYYY')}
              </time>
            </>
          )
        }
      </p>
    </div>
    <p class='text-sm text-gray-600 dark:text-gray-300 min-w-32 md:mt-0'>{minutesRead}</p>
  </div>
  <article
    class='prose lg:prose-xl prose-hr:transition-colors prose-hr:duration-300 mx-auto dark:prose-invert max-w-none w-full'
  >
    <slot />
  </article>
</BaseLayout>
