---
interface Props {
  title: string
  description: string
}

const { title, description } = Astro.props
---

<!-- Global Metadata -->
<meta charset='utf-8' />
<meta name='viewport' content='width=device-width, initial-scale=1.0, viewport-fit=cover' />
<meta name='generator' content={Astro.generator} />
<link rel='icon' type='image/svg+xml' href='/favicon.svg' />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name='title' content={title} />
<meta name='description' content={description} />

<!-- Open Graph / Facebook -->
<meta property='og:type' content='website' />
<meta property='og:url' content={Astro.url} />
<meta property='og:title' content={title} />
<meta property='og:description' content={description} />

<!-- Twitter -->
<meta property='twitter:card' content='summary_large_image' />
<meta property='twitter:url' content={Astro.url} />
<meta property='twitter:title' content={title} />
<meta property='twitter:description' content={description} />

<!-- Google Fonts -->
<link rel='preconnect' href='https://fonts.googleapis.com' />
<link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />
<link href={'https://fonts.googleapis.com/css2?family=Fira+Code&family=Inter&display=swap'} rel='stylesheet' />

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme')
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
  })()

  document.documentElement.setAttribute('style', `color-scheme: ${theme};`)
  document.documentElement.setAttribute('data-theme', theme)
  window.localStorage.setItem('theme', theme)
</script>
