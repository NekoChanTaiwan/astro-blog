---
import { cx } from '@/lib/utils'

export interface Props {
  header: string
}
---

<script>
  import gsap from 'gsap'

  const components = document.querySelectorAll('[data-component="collapse"]')

  const handleClick = (e: Event) => {
    const button = e.target as HTMLButtonElement
    const content = button.nextElementSibling as HTMLDivElement
    const icon = button.querySelector('svg') as SVGElement
    const isOpen = button.dataset.open === 'false' // the button is closed, so we want to open it

    button.dataset.open = isOpen ? 'true' : 'false'

    button.classList.toggle('bg-slate-200', isOpen)
    button.classList.toggle('dark:bg-gray-700', isOpen)

    gsap.to(content, { height: isOpen ? 'auto' : 0, duration: 0.3 })
    gsap.to(icon, { rotate: isOpen ? 180 : 0, duration: 0.3 })
  }

  components.forEach((component) => {
    component.addEventListener('click', handleClick)
  })
</script>

<div class='my-8 overflow-hidden rounded'>
  <button
    type='button'
    class={cx(
      'flex w-full touch-manipulation items-center justify-between bg-slate-100 py-2 px-4 text-xl transition-[background-color] duration-300 dark:bg-gray-800'
    )}
    data-component='collapse'
    data-open='false'
  >
    <span>{Astro.props.header}</span>
    <svg
      class='hidden sm:inline-block'
      stroke='currentColor'
      fill='currentColor'
      stroke-width='0'
      version='1'
      viewBox='0 0 48 48'
      enable-background='new 0 0 48 48'
      height='1em'
      width='1em'
    >
      <polygon
        class='fill-black dark:fill-white'
        points='5,30.9 8.1,34 24,18.1 39.9,34 43,30.9 24,12'></polygon>
    </svg>
  </button>
  <div
    class='h-0 overflow-hidden bg-slate-100 transition-[background-color] duration-300 dark:bg-gray-800'
  >
    <div class='m-4'><slot /></div>
  </div>
</div>
